---
interface Props {
  title: string;
  level?: 1 | 2 | 3 | 4 | 5 | 6;
  class?: string;
  id?: string;
  centered?: boolean;
  gradient?: boolean;
  size?: 'sm' | 'md' | 'lg' | 'xl';
}

const { 
  title, 
  level = 1, 
  class: className = '', 
  id,
  centered = false,
  gradient = false,
  size = 'md'
} = Astro.props;

const Tag = `h${level}` as const;

const sizeClasses = {
  sm: 'text-lg md:text-xl',
  md: 'text-xl md:text-2xl lg:text-3xl',
  lg: 'text-2xl md:text-3xl lg:text-4xl xl:text-5xl',
  xl: 'text-3xl md:text-4xl lg:text-5xl xl:text-6xl'
};

const baseClasses = [
  'font-bold',
  'leading-tight',
  'tracking-tight',
  sizeClasses[size],
  centered && 'text-center',
  gradient && 'bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent',
  className
].filter(Boolean).join(' ');
---

<Tag 
  class={baseClasses}
  id={id}
  transition:name={`title-${title.toLowerCase().replace(/\s+/g, '-')}`}
>
  {title}
</Tag>

<style>
  h1, h2, h3, h4, h5, h6 {
    word-wrap: break-word;
    hyphens: auto;
  }
  
  /* Animaci√≥n suave para el gradiente */
  .bg-gradient-to-r {
    background-size: 200% 200%;
    animation: gradient-shift 3s ease-in-out infinite;
  }
  
  @keyframes gradient-shift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  /* Mejora de legibilidad */
  h1, h2, h3, h4, h5, h6 {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  /* Responsive improvements */
  @media (max-width: 640px) {
    h1, h2, h3, h4, h5, h6 {
      line-height: 1.2;
    }
  }
</style>